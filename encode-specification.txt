The object will encode each parent class until either JJJObject or Object is encountered.
All encoded objects are JSON compliant.

Translated objects must have a zero argument constructor, it does not have to be
public.

Object:
The root record represents an encoded object.
An object has the following records:
 - retain : instructs the translator whether to keep this object.
 - type : the canonical class name
 - fields
 - key : reference to this object

Setting the retain record will override the default set by the class.  Note, 
unknown classes are by default retained.  An unknown class is one which has not
been registered with the JS translator, however it still must have a class name
in order to return it to the sever.

The fields record can have any number of named records, each of which represents
a field in the encoded object.  Each named record can be an object, an enum, 
a primitive, an array, or a reference.

The key record is the reference value to store this object under.  All values
starting with 'S' are reserved for the translator.

Primitive:
A primitive record contains the following records:
 - primitive : the primative type {number, boolean, string}
 - value : contained value

Enum:
An enum record contains two records:
 - value : contained value
 - enum : canonical class name

Array:
 - elements : a JSON array of the arrays contents (encoded objects).
 - retain : always false
 - key : reference to this array

Pointer: 
 - ptr : a reference to another object, which is either in this hierarchy or 
was sent previously and retained.

Null value:
 - type : always 'null'.