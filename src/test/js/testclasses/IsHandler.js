"use strict";
const HasHandler = require("./HasHandler");
const AHandler = require("jjjrmi/translator/AHandler");
class IsHandler extends AHandler {
	constructor(encodedResult) {
            super(encodedResult);
            this.__init();
        }
	encode(object) {
            this.encodeField("a", object.x);
            this.encodeField("b", object.y);
        }
	static __isRetained() {
            return true;
        }
	static __getHandles() {
            return 'ca.frar.jjjrmi.testclasses.HasHandler';
        }
	__init() {}
	static __isEnum() {
            return false;
        }
	static __getClass() {
            return "ca.frar.jjjrmi.testclasses.IsHandler";
        }
	getInstance() {
            return new HasHandler();
        }
	static __isHandler() {
            return true;
        }
	decode(hasHandler) {
            
            hasHandler.x = this.decodeObject("a");
            hasHandler.y = this.decodeObject("b");
            hasHandler.z = hasHandler.x + hasHandler.y;
            
        }
};

if (typeof module !== "undefined") module.exports = IsHandler;
// Generated by JJJRMI 0.7.0
// 20.04.02 15:24:12
